#
# Solution to Project Euler Problem 2
# https://projecteuler.net/problem=2

""" 
Even Fibonacci numbers
Problem 2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def solve():
    """ 
    the answer is 233168
    from https://github.com/luckytoilet/projecteuler-solutions/blob/master/Solutions.md
    >>> solve()
    4613732
    """
 
    v1 = 1
    v2 = 2
    limit = 4000000
    sum_even_numbers = 2

    while v2 < limit:

        next_num = v1 + v2
        v1 = v2
        v2 = next_num

        if next_num % 2 == 0:
            sum_even_numbers = sum_even_numbers + next_num

    return(sum_even_numbers)

if __name__ == "__main__":
    import doctest
    doctest.testmod()

 

            




